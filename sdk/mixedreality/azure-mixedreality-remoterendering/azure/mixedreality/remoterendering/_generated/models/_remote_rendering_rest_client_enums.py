# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class ConversionStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the conversion. Terminal states are 'Cancelled', 'Failed', 'Succeeded'
    """

    NOT_STARTED = "NotStarted"
    RUNNING = "Running"
    CANCELLED = "Cancelled"
    FAILED = "Failed"
    SUCCEEDED = "Succeeded"

class SessionSize(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """Size of the server used for the rendering session. Remote Rendering with Standard size server
    has a maximum scene size of 20 million polygons. Remote Rendering with Premium size does not
    enforce a hard maximum, but performance may be degraded if your content exceeds the rendering
    capabilities of the service.
    """

    STANDARD = "Standard"
    PREMIUM = "Premium"

class SessionStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the rendering session. Once the status reached the 'Ready' state it can be
    connected to. The terminal state is 'Stopped'.
    """

    ERROR = "Error"
    EXPIRED = "Expired"
    STARTING = "Starting"
    READY = "Ready"
    STOPPED = "Stopped"
